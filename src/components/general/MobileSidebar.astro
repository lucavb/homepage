---
import NavigationLinks from './NavigationLinks.astro';
import ThemeToggle from './ThemeToggle.astro';
import SocialLinks from './SocialLinks.astro';

interface Props {
    isHomePage?: boolean;
}

const { isHomePage = true } = Astro.props;
---

<div
    id="mobile-sidebar-overlay"
    class="fixed inset-0 z-50 bg-black/50 backdrop-blur-sm transition-opacity duration-300 opacity-0 pointer-events-none md:hidden"
>
</div>

<div
    id="mobile-sidebar"
    class="fixed top-0 right-0 z-50 h-full w-80 max-w-[85vw] bg-white dark:bg-gray-900 border-l border-gray-200 dark:border-gray-700 transform translate-x-full transition-transform duration-300 ease-in-out md:hidden"
    role="dialog"
    aria-modal="true"
    aria-labelledby="mobile-menu-title"
    aria-hidden="true"
>
    <div class="flex flex-col h-full">
        <div class="flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700">
            <span id="mobile-menu-title" class="text-xl font-bold text-gray-900 dark:text-white">Menu</span>
            <button
                id="mobile-menu-close"
                class="p-2 rounded-lg border border-gray-200 dark:border-gray-600 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-600 dark:text-gray-300"
                aria-label="Close menu"
            >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"
                    ></path>
                </svg>
            </button>
        </div>

        <NavigationLinks isHomePage={isHomePage} variant="mobile" />

        <div class="p-4 border-t border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between mb-4">
                <span class="text-sm font-medium text-gray-900 dark:text-white">Theme</span>
                <ThemeToggle id="mobile-theme-toggle" variant="toggle" />
            </div>
            <SocialLinks size="lg" emailId="mobile-email-link" class="justify-center space-x-6" />
        </div>
    </div>
</div>

<script>
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenuClose = document.getElementById('mobile-menu-close');
    const mobileSidebar = document.getElementById('mobile-sidebar');
    const mobileSidebarOverlay = document.getElementById('mobile-sidebar-overlay');
    const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');

    const openMobileMenu = () => {
        mobileSidebar?.classList.remove('translate-x-full');
        mobileSidebarOverlay?.classList.remove('opacity-0', 'pointer-events-none');
        document.body.style.overflow = 'hidden';

        mobileMenuButton?.setAttribute('aria-expanded', 'true');
        mobileMenuButton?.setAttribute('aria-label', 'Close menu');
        mobileSidebar?.setAttribute('aria-hidden', 'false');

        setTimeout(() => {
            mobileMenuClose?.focus();
        }, 100);
    };

    const closeMobileMenu = () => {
        mobileSidebar?.classList.add('translate-x-full');
        mobileSidebarOverlay?.classList.add('opacity-0', 'pointer-events-none');
        document.body.style.overflow = '';

        mobileMenuButton?.setAttribute('aria-expanded', 'false');
        mobileMenuButton?.setAttribute('aria-label', 'Open menu');
        mobileSidebar?.setAttribute('aria-hidden', 'true');

        mobileMenuButton?.focus();
    };

    mobileMenuButton?.addEventListener('click', openMobileMenu);
    mobileMenuClose?.addEventListener('click', closeMobileMenu);
    mobileSidebarOverlay?.addEventListener('click', closeMobileMenu);

    mobileNavLinks.forEach((link) => {
        link.addEventListener('click', () => {
            setTimeout(closeMobileMenu, 100);
        });
    });

    window.addEventListener('resize', () => {
        if (window.innerWidth >= 768) {
            closeMobileMenu();
        }
    });

    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            closeMobileMenu();
        }

        if (!mobileSidebar?.classList.contains('translate-x-full') && e.key === 'Tab') {
            const focusableElements = mobileSidebar?.querySelectorAll(
                'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])',
            );

            if (focusableElements && focusableElements.length > 0) {
                const firstElement = focusableElements[0] as HTMLElement;
                const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;

                if (e.shiftKey && document.activeElement === firstElement) {
                    e.preventDefault();
                    lastElement.focus();
                } else if (!e.shiftKey && document.activeElement === lastElement) {
                    e.preventDefault();
                    firstElement.focus();
                }
            }
        }
    });
</script>
