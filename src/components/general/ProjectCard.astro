---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import { IProjectDetails } from '@types';

const { projectDetail } = Astro.props as IProjectDetails;
const { title, thumbnail, liveUrl, githubUrl } = projectDetail;

// Type guard to check if thumbnail is ImageMetadata - updated
const isImageMetadata = (src: string | ImageMetadata): src is ImageMetadata => {
    return typeof src === 'object' && src !== null && 'src' in src;
};
---

<article
    class="bg-white dark:bg-gray-800 rounded-lg cursor-pointer transition-all duration-300 shadow-sm hover:shadow-lg overflow-hidden border border-gray-200 dark:border-gray-700 group"
>
    <div
        class="h-48 bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-700 dark:to-gray-600 flex items-center justify-center overflow-hidden"
    >
        {
            isImageMetadata(thumbnail) ? (
                <Image
                    src={thumbnail}
                    alt={`${title} project screenshot`}
                    class="w-full h-full object-cover transition-transform duration-300 ease-out group-hover:scale-105"
                    loading="lazy"
                    width={400}
                    height={192}
                />
            ) : (
                <img
                    src={thumbnail}
                    alt={`${title} project screenshot`}
                    class="w-full h-full object-cover transition-transform duration-300 ease-out group-hover:scale-105"
                    loading="lazy"
                    width="400"
                    height="192"
                />
            )
        }
    </div>
    <div class="p-6">
        <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3">{title}</h3>
        <div class="flex space-x-4">
            {
                liveUrl && (
                    <a
                        href={liveUrl}
                        target="_blank"
                        class="text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-semibold"
                        aria-label={`View ${title} live demo`}
                    >
                        View Live →
                    </a>
                )
            }
            {
                githubUrl && (
                    <a
                        href={githubUrl}
                        target="_blank"
                        class="text-gray-600 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 font-semibold"
                        aria-label={`View ${title} source code on GitHub`}
                    >
                        GitHub →
                    </a>
                )
            }
        </div>
    </div>
</article>
